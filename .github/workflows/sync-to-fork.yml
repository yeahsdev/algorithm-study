name: Sync Algorithm to Forked Repo

on:
  push:
    branches:
      - main  # algorithm-study 레포지토리에서 main 브랜치에 푸시될 때 실행

jobs:
  sync_fork:
    runs-on: ubuntu-latest
    steps:
      - name: 내 algorithm-study 코드 가져오기
        uses: actions/checkout@v3

      - name: Git 설정 (사용자 정보 등록)
        run: |
          git config --global user.email "iyeahs71@gmail.com"
          git config --global user.name "yeahsdev"

      - name: 내 Fork한 Daily_Leetcode_Study 레포 클론 (GitHub Token 사용)
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git clone https://$GH_PAT@github.com/yeahsdev/Daily_Leetcode_Study.git repo-b
          cd repo-b
          git checkout main || git checkout -b main

      - name: 서브모듈 문제 해결 (`ys` 폴더를 일반 폴더로 변환)
        run: |
          cd repo-b
          git submodule deinit -f ys || true  # 서브모듈 해제
          git rm -rf ys || true               # ys 폴더 삭제
          rm -rf .git/modules/ys || true      # Git 내부 서브모듈 정보 삭제
          mkdir -p ys                         # 새로 ys 폴더 생성
          git commit -m "Remove ys submodule" || echo "No changes to commit"
          git push origin main || echo "No changes to push"

      - name: ys 폴더에 algorithm-study 코드 동기화
        run: |
          rsync -av --delete $GITHUB_WORKSPACE/ repo-b/ys/

      - name: 디버깅 - ys 폴더 확인
        run: |
          echo "repo-b 내부 디렉토리 구조:"
          ls -lah repo-b/ys

      - name: Fork한 레포에 변경 사항 커밋 및 푸시 (GH_PAT 인증 적용)
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          cd repo-b
          TODAY=$(date "+%Y-%m-%d")  # 오늘 날짜 가져오기
          git add ys
          git commit -m "Sync algorithm-study to ys - $TODAY" || echo "No changes to commit"
          git remote remove origin || true
          git remote add origin https://$GH_PAT@github.com/yeahsdev/Daily_Leetcode_Study.git
          git push --force origin main || echo "No changes to push"
